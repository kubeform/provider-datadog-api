/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-datadog-api/apis/slo/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CorrectionLister helps list Corrections.
// All objects returned here must be treated as read-only.
type CorrectionLister interface {
	// List lists all Corrections in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Correction, err error)
	// Corrections returns an object that can list and get Corrections.
	Corrections(namespace string) CorrectionNamespaceLister
	CorrectionListerExpansion
}

// correctionLister implements the CorrectionLister interface.
type correctionLister struct {
	indexer cache.Indexer
}

// NewCorrectionLister returns a new CorrectionLister.
func NewCorrectionLister(indexer cache.Indexer) CorrectionLister {
	return &correctionLister{indexer: indexer}
}

// List lists all Corrections in the indexer.
func (s *correctionLister) List(selector labels.Selector) (ret []*v1alpha1.Correction, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Correction))
	})
	return ret, err
}

// Corrections returns an object that can list and get Corrections.
func (s *correctionLister) Corrections(namespace string) CorrectionNamespaceLister {
	return correctionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CorrectionNamespaceLister helps list and get Corrections.
// All objects returned here must be treated as read-only.
type CorrectionNamespaceLister interface {
	// List lists all Corrections in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Correction, err error)
	// Get retrieves the Correction from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Correction, error)
	CorrectionNamespaceListerExpansion
}

// correctionNamespaceLister implements the CorrectionNamespaceLister
// interface.
type correctionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Corrections in the indexer for a given namespace.
func (s correctionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Correction, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Correction))
	})
	return ret, err
}

// Get retrieves the Correction from the indexer for a given namespace and name.
func (s correctionNamespaceLister) Get(name string) (*v1alpha1.Correction, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("correction"), name)
	}
	return obj.(*v1alpha1.Correction), nil
}
