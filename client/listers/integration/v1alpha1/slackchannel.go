/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-datadog-api/apis/integration/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SlackChannelLister helps list SlackChannels.
// All objects returned here must be treated as read-only.
type SlackChannelLister interface {
	// List lists all SlackChannels in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SlackChannel, err error)
	// SlackChannels returns an object that can list and get SlackChannels.
	SlackChannels(namespace string) SlackChannelNamespaceLister
	SlackChannelListerExpansion
}

// slackChannelLister implements the SlackChannelLister interface.
type slackChannelLister struct {
	indexer cache.Indexer
}

// NewSlackChannelLister returns a new SlackChannelLister.
func NewSlackChannelLister(indexer cache.Indexer) SlackChannelLister {
	return &slackChannelLister{indexer: indexer}
}

// List lists all SlackChannels in the indexer.
func (s *slackChannelLister) List(selector labels.Selector) (ret []*v1alpha1.SlackChannel, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SlackChannel))
	})
	return ret, err
}

// SlackChannels returns an object that can list and get SlackChannels.
func (s *slackChannelLister) SlackChannels(namespace string) SlackChannelNamespaceLister {
	return slackChannelNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SlackChannelNamespaceLister helps list and get SlackChannels.
// All objects returned here must be treated as read-only.
type SlackChannelNamespaceLister interface {
	// List lists all SlackChannels in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SlackChannel, err error)
	// Get retrieves the SlackChannel from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SlackChannel, error)
	SlackChannelNamespaceListerExpansion
}

// slackChannelNamespaceLister implements the SlackChannelNamespaceLister
// interface.
type slackChannelNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SlackChannels in the indexer for a given namespace.
func (s slackChannelNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SlackChannel, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SlackChannel))
	})
	return ret, err
}

// Get retrieves the SlackChannel from the indexer for a given namespace and name.
func (s slackChannelNamespaceLister) Get(name string) (*v1alpha1.SlackChannel, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("slackchannel"), name)
	}
	return obj.(*v1alpha1.SlackChannel), nil
}
