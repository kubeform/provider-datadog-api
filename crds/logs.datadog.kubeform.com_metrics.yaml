apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: datadog.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: metrics.logs.datadog.kubeform.com
spec:
  group: logs.datadog.kubeform.com
  names:
    kind: Metric
    listKind: MetricList
    plural: metrics
    singular: metric
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  compute:
                    description: The compute rule to compute the log-based metric.
                      This field can't be updated after creation.
                    properties:
                      aggregationType:
                        description: The type of aggregation to use. This field can't
                          be updated after creation.
                        type: string
                      path:
                        description: The path to the value the log-based metric will
                          aggregate on (only used if the aggregation type is a "distribution").
                          This field can't be updated after creation.
                        type: string
                    required:
                    - aggregationType
                    type: object
                  filter:
                    description: The log-based metric filter. Logs matching this filter
                      will be aggregated in this metric.
                    properties:
                      query:
                        description: The search query - following the log search syntax.
                        type: string
                    required:
                    - query
                    type: object
                  groupBy:
                    description: The rules for the group by.
                    items:
                      properties:
                        path:
                          description: The path to the value the log-based metric
                            will be aggregated over.
                          type: string
                        tagName:
                          description: Name of the tag that gets created.
                          type: string
                      required:
                      - path
                      - tagName
                      type: object
                    type: array
                  id:
                    type: string
                  name:
                    description: The name of the log-based metric. This field can't
                      be updated after creation.
                    type: string
                required:
                - compute
                - filter
                - name
                type: object
              state:
                properties:
                  compute:
                    description: The compute rule to compute the log-based metric.
                      This field can't be updated after creation.
                    properties:
                      aggregationType:
                        description: The type of aggregation to use. This field can't
                          be updated after creation.
                        type: string
                      path:
                        description: The path to the value the log-based metric will
                          aggregate on (only used if the aggregation type is a "distribution").
                          This field can't be updated after creation.
                        type: string
                    required:
                    - aggregationType
                    type: object
                  filter:
                    description: The log-based metric filter. Logs matching this filter
                      will be aggregated in this metric.
                    properties:
                      query:
                        description: The search query - following the log search syntax.
                        type: string
                    required:
                    - query
                    type: object
                  groupBy:
                    description: The rules for the group by.
                    items:
                      properties:
                        path:
                          description: The path to the value the log-based metric
                            will be aggregated over.
                          type: string
                        tagName:
                          description: Name of the tag that gets created.
                          type: string
                      required:
                      - path
                      - tagName
                      type: object
                    type: array
                  id:
                    type: string
                  name:
                    description: The name of the log-based metric. This field can't
                      be updated after creation.
                    type: string
                required:
                - compute
                - filter
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
